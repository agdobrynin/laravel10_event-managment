{
    "openapi": "3.0.0",
    "info": {
        "title": "API for Event management system",
        "version": "1.0.1"
    },
    "servers": [
        {
            "url": "/api",
            "description": "Main endpoint"
        }
    ],
    "paths": {
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List of events with relation loading",
                "description": "Get list of events",
                "operationId": "eventsList",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/relationInEvent"
                    },
                    {
                        "$ref": "#/components/parameters/withCountInEvent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation query parameters for relation loading",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationDto"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Store a newly created resource in storage.",
                "description": "Store new event",
                "operationId": "eventsStore",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Display the specified resource.",
                "description": "Show Event with relation",
                "operationId": "eventsShow",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/relationInEvent"
                    },
                    {
                        "$ref": "#/components/parameters/withCountInEvent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation query parameters for relation loading",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponseDto"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update the specified resource in storage.",
                "description": "Update event",
                "operationId": "eventsUpdate",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponseDto"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Remove the specified resource from storage.",
                "description": "Delete event with attendees",
                "operationId": "eventsDestroy",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponseDto"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiErrorResponseDto": {
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttendeeLoadRelationEnum": {
                "type": "string",
                "enum": [
                    "user"
                ]
            },
            "EventLoadRelationEnum": {
                "type": "string",
                "enum": [
                    "user",
                    "attendees",
                    "attendees.user"
                ]
            },
            "EventWithCountEnum": {
                "type": "string",
                "enum": [
                    "attendees"
                ]
            },
            "EventStoreRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 10
                    },
                    "description": {
                        "type": "string",
                        "minLength": 15,
                        "nullable": true
                    },
                    "startTime": {
                        "description": "date must be after today",
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$",
                        "example": "2023-01-01 11:30"
                    },
                    "endTime": {
                        "description": "date must be after startTime property",
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$",
                        "example": "2023-01-01 11:30"
                    }
                },
                "type": "object"
            },
            "EventUpdateRequest": {
                "minProperties": 1,
                "type": "object",
                "anyOf": [
                    {
                        "properties": {
                            "name": {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 10
                            },
                            "description": {
                                "type": "string",
                                "minLength": 15,
                                "nullable": true
                            },
                            "startTime": {
                                "description": "date must be after today",
                                "type": "string",
                                "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$",
                                "example": "2023-01-01 11:30"
                            },
                            "endTime": {
                                "description": "date must be after startTime property",
                                "type": "string",
                                "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$",
                                "example": "2023-01-01 11:30"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AttendeeResource": {
                "required": [
                    "id",
                    "createdAt",
                    "updatedAt"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/EventUserResource"
                            }
                        ],
                        "nullable": true
                    },
                    "createdAt": {
                        "description": "Date and time",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "\\d{4}-\\d{2}-\\d{2}\\T\\d{2}:\\d{2}\\d{2}\\+\\d{2}\\:\\d{2}",
                        "example": "2023-09-24T15:00:00+00:00"
                    },
                    "updatedAt": {
                        "description": "Date and time",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "\\d{4}-\\d{2}-\\d{2}\\T\\d{2}:\\d{2}\\d{2}\\+\\d{2}\\:\\d{2}",
                        "example": "2023-09-24T15:00:00+00:00"
                    }
                },
                "type": "object"
            },
            "EventResource": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "name",
                                "startTime",
                                "endTime",
                                "createdAt",
                                "updatedAt"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "startTime": {
                                    "description": "Date and time the Event as ISO format",
                                    "type": "string",
                                    "format": "date-time",
                                    "pattern": "\\d{4}-\\d{2}-\\d{2}\\T\\d{2}:\\d{2}\\d{2}\\+\\d{2}\\:\\d{2}",
                                    "example": "2023-09-24T15:00:00+00:00"
                                },
                                "endTime": {
                                    "description": "Date and time the Event as ISO format",
                                    "type": "string",
                                    "format": "date-time",
                                    "pattern": "\\d{4}-\\d{2}-\\d{2}\\T\\d{2}:\\d{2}\\d{2}\\+\\d{2}\\:\\d{2}",
                                    "example": "2023-09-24T15:00:00+00:00"
                                },
                                "createdAt": {
                                    "description": "Date and time",
                                    "type": "string",
                                    "format": "date-time",
                                    "pattern": "\\d{4}-\\d{2}-\\d{2}\\T\\d{2}:\\d{2}\\d{2}\\+\\d{2}\\:\\d{2}",
                                    "example": "2023-09-24T15:00:00+00:00"
                                },
                                "updatedAt": {
                                    "description": "Date and time",
                                    "type": "string",
                                    "format": "date-time",
                                    "pattern": "\\d{4}-\\d{2}-\\d{2}\\T\\d{2}:\\d{2}\\d{2}\\+\\d{2}\\:\\d{2}",
                                    "example": "2023-09-24T15:00:00+00:00"
                                }
                            },
                            "type": "object",
                            "anyOf": [
                                {
                                    "properties": {
                                        "attendees": {
                                            "minProperties": 0,
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AttendeeResource"
                                            },
                                            "minItems": 0
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/EventUserResource"
                                        },
                                        "countAttendees": {
                                            "minProperties": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "EventUserResource": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "description": "User name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApiValidationDto": {
                "title": "Validation errors",
                "properties": {
                    "message": {
                        "description": "The given data was invalid.",
                        "type": "string"
                    },
                    "errors": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ApiValidationItemDto"
                            }
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ApiValidationItemDto": {
                "title": "Validation item errors",
                "properties": {
                    "fieldName": {
                        "description": "Key of error display as field name",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "some errors 1",
                            "some errors 2"
                        ]
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "relationInAttendees": {
                "name": "relation[]",
                "in": "query",
                "description": "Load relations",
                "schema": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/AttendeeLoadRelationEnum"
                    }
                }
            },
            "relationInEvent": {
                "name": "relation[]",
                "in": "query",
                "description": "Load relations",
                "schema": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/EventLoadRelationEnum"
                    }
                }
            },
            "withCountInEvent": {
                "name": "with_count[]",
                "in": "query",
                "description": "Load count relation",
                "schema": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/EventWithCountEnum"
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKeyBearer": {
                "type": "http",
                "description": "Bearer token authorization",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "string",
                "scheme": "bearer"
            }
        }
    }
}